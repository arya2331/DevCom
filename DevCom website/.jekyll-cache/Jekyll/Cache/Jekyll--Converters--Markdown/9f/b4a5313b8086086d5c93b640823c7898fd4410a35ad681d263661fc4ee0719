I"ª<h1 id="rpi-tv-noticeboard">RPi TV Noticeboard</h1>

<h3 id="about">About</h3>

<p>The contents of this folder are to be copied to the RPi. There are 3 essential parts-</p>
<ul>
  <li><strong>fetch.py</strong>: A Python script that runs in the background and periodically fetches images from the server. We set up a cron job for this.</li>
  <li><strong>gui.py</strong>: The main script that runs on boot and occupies the foreground. This displays the images on the TV.</li>
  <li><strong>config.json</strong>: Helps you define the configuration for how you want the images to appear on the TV.</li>
</ul>

<h3 id="setup">Setup</h3>

<ol>
  <li>Install a standard Raspbian OS on the RPi.</li>
  <li>Configure the RPi to connect to internet. If it is an RPi-3, connect using wifi. Follow the <a href="https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md">official docs</a> to learn how to connect through wifi. To connect to IITB-Wireless, use the wpa_supplicant.conf specified <a href="https://gist.github.com/nihal111/56a0317fb61596cd17f2bb080591ba40">here</a>. For RPi 2 or below, connect using an external wifi module or ethernet.</li>
  <li>SSH into the RPi.</li>
  <li>On the RPi clone repositories on desktop. <code class="language-plaintext highlighter-rouge">git clone git@github.com:MayuBhattu/RPi-Logs.git</code> and <code class="language-plaintext highlighter-rouge">git@github.com:MayuBhattu/RPI_Modified.git</code></li>
  <li>On the RPi, execute <code class="language-plaintext highlighter-rouge">sudo apt-get install python-tk python-imaging python-imaging-tk x11-xserver-utils</code> or <code class="language-plaintext highlighter-rouge">sudo apt-get install python-imaging python-imaging-tk</code> or <code class="language-plaintext highlighter-rouge">sudo apt-get install python3-pil python3-pil.imagetk</code></li>
  <li>On the RPi, execute <code class="language-plaintext highlighter-rouge">sudo crontab -e</code>. It might prompt you to choose a text editor. (Choose nano if you donâ€™t know what to do.) Add the following line at the bottom of the file- <code class="language-plaintext highlighter-rouge">0 */2 * * * (sleep 5; killall python3; cd /home/pi/Desktop/RPI_Modified; python3 fetch.py &gt;&gt; /home/pi/Desktop/RPi-Logs/9/TV_log.txt 2&gt;&amp;1; cd /home/pi/Desktop/RPI_Modified; bash ./launcher.sh)</code>. This would run our fetch script every 6 hours and save all output in the TV_log file created inside <code class="language-plaintext highlighter-rouge">~/rpi</code>. Execute crontab -e and add the following - <code class="language-plaintext highlighter-rouge">15 1 * * * (cd /home/pi/Desktop/RPI_Modified; bash ./automate.sh &gt;&gt; /home/pi/Desktop/Repo_error.log 2&gt;&amp;1)</code> and <code class="language-plaintext highlighter-rouge">15 2 * * * (cd /home/pi/Desktop/RPi-Logs; bash ./automate.sh &gt;&gt; /home/pi/Desktop/Logs_error.log 2&gt;&amp;1)</code> and <code class="language-plaintext highlighter-rouge">0 12 * * * (reboot now)</code>.</li>
  <li>On the RPi, cd into the <code class="language-plaintext highlighter-rouge">RPI_Modified</code> folder and execute <code class="language-plaintext highlighter-rouge">chmod 755 launcher.sh</code>.</li>
  <li>On the RPi, execute <code class="language-plaintext highlighter-rouge">sudo nano /home/pi/.config/lxsession/LXDE-pi/autostart</code>. Add the following line to the bottom- <code class="language-plaintext highlighter-rouge">@sh /home/pi/Desktop/RPI_Modified/launcher.sh</code>.</li>
  <li>Disable standby screen blanking. Execute <code class="language-plaintext highlighter-rouge">sudo nano ~/.config/lxsession/LXDE-pi/autostart</code> and add the following
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@xset s 0 0
@xset s noblank
@xset s noexpose
@xset dpms 0 0 0
</code></pre></div>    </div>
    <p>Ctrl + X, Y and Enter. Hit <code class="language-plaintext highlighter-rouge">sudo reboot</code></p>
  </li>
</ol>
:ET